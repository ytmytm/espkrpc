/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Fri Oct  7 00:07:58 2016. */
/* Generated from krpc.proto from krpc-0.3.6 */

#ifndef PB_KRPC_SCHEMA_KRPC_PB_H_INCLUDED
#define PB_KRPC_SCHEMA_KRPC_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _krpc_schema_Class {
    pb_callback_t name;
    pb_callback_t documentation;
/* @@protoc_insertion_point(struct:krpc_schema_Class) */
} krpc_schema_Class;

typedef struct _krpc_schema_Dictionary {
    pb_callback_t entries;
/* @@protoc_insertion_point(struct:krpc_schema_Dictionary) */
} krpc_schema_Dictionary;

typedef struct _krpc_schema_DictionaryEntry {
    pb_callback_t key;
    pb_callback_t value;
/* @@protoc_insertion_point(struct:krpc_schema_DictionaryEntry) */
} krpc_schema_DictionaryEntry;

typedef struct _krpc_schema_Enumeration {
    pb_callback_t name;
    pb_callback_t values;
    pb_callback_t documentation;
/* @@protoc_insertion_point(struct:krpc_schema_Enumeration) */
} krpc_schema_Enumeration;

typedef struct _krpc_schema_List {
    pb_callback_t items;
/* @@protoc_insertion_point(struct:krpc_schema_List) */
} krpc_schema_List;

typedef struct _krpc_schema_Request {
    pb_callback_t service;
    pb_callback_t procedure;
    pb_callback_t arguments;
/* @@protoc_insertion_point(struct:krpc_schema_Request) */
} krpc_schema_Request;

typedef struct _krpc_schema_Service {
    pb_callback_t name;
    pb_callback_t procedures;
    pb_callback_t classes;
    pb_callback_t enumerations;
    pb_callback_t documentation;
/* @@protoc_insertion_point(struct:krpc_schema_Service) */
} krpc_schema_Service;

typedef struct _krpc_schema_Services {
    pb_callback_t services;
/* @@protoc_insertion_point(struct:krpc_schema_Services) */
} krpc_schema_Services;

typedef struct _krpc_schema_Set {
    pb_callback_t items;
/* @@protoc_insertion_point(struct:krpc_schema_Set) */
} krpc_schema_Set;

typedef struct _krpc_schema_StreamMessage {
    pb_callback_t responses;
/* @@protoc_insertion_point(struct:krpc_schema_StreamMessage) */
} krpc_schema_StreamMessage;

typedef struct _krpc_schema_Tuple {
    pb_callback_t items;
/* @@protoc_insertion_point(struct:krpc_schema_Tuple) */
} krpc_schema_Tuple;

typedef struct _krpc_schema_Argument {
    bool has_position;
    uint32_t position;
    pb_callback_t value;
/* @@protoc_insertion_point(struct:krpc_schema_Argument) */
} krpc_schema_Argument;

typedef struct _krpc_schema_EnumerationValue {
    pb_callback_t name;
    bool has_value;
    int32_t value;
    pb_callback_t documentation;
/* @@protoc_insertion_point(struct:krpc_schema_EnumerationValue) */
} krpc_schema_EnumerationValue;

typedef struct _krpc_schema_Parameter {
    pb_callback_t name;
    pb_callback_t type;
    bool has_has_default_value;
    bool has_default_value;
    pb_callback_t default_value;
/* @@protoc_insertion_point(struct:krpc_schema_Parameter) */
} krpc_schema_Parameter;

typedef struct _krpc_schema_Procedure {
    pb_callback_t name;
    pb_callback_t parameters;
    bool has_has_return_type;
    bool has_return_type;
    pb_callback_t return_type;
    pb_callback_t attributes;
    pb_callback_t documentation;
/* @@protoc_insertion_point(struct:krpc_schema_Procedure) */
} krpc_schema_Procedure;

typedef struct _krpc_schema_Response {
    bool has_time;
    double time;
    bool has_has_error;
    bool has_error;
    pb_callback_t error;
    bool has_has_return_value;
    bool has_return_value;
    pb_callback_t return_value;
/* @@protoc_insertion_point(struct:krpc_schema_Response) */
} krpc_schema_Response;

typedef struct _krpc_schema_Status {
    pb_callback_t version;
    bool has_bytes_read;
    uint64_t bytes_read;
    bool has_bytes_written;
    uint64_t bytes_written;
    bool has_bytes_read_rate;
    float bytes_read_rate;
    bool has_bytes_written_rate;
    float bytes_written_rate;
    bool has_rpcs_executed;
    uint64_t rpcs_executed;
    bool has_rpc_rate;
    float rpc_rate;
    bool has_one_rpc_per_update;
    bool one_rpc_per_update;
    bool has_max_time_per_update;
    uint32_t max_time_per_update;
    bool has_adaptive_rate_control;
    bool adaptive_rate_control;
    bool has_blocking_recv;
    bool blocking_recv;
    bool has_recv_timeout;
    uint32_t recv_timeout;
    bool has_time_per_rpc_update;
    float time_per_rpc_update;
    bool has_poll_time_per_rpc_update;
    float poll_time_per_rpc_update;
    bool has_exec_time_per_rpc_update;
    float exec_time_per_rpc_update;
    bool has_stream_rpcs;
    uint32_t stream_rpcs;
    bool has_stream_rpcs_executed;
    uint64_t stream_rpcs_executed;
    bool has_stream_rpc_rate;
    float stream_rpc_rate;
    bool has_time_per_stream_update;
    float time_per_stream_update;
/* @@protoc_insertion_point(struct:krpc_schema_Status) */
} krpc_schema_Status;

typedef struct _krpc_schema_StreamResponse {
    bool has_id;
    uint32_t id;
    bool has_response;
    krpc_schema_Response response;
/* @@protoc_insertion_point(struct:krpc_schema_StreamResponse) */
} krpc_schema_StreamResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define krpc_schema_Request_init_default         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Argument_init_default        {false, 0, {{NULL}, NULL}}
#define krpc_schema_Response_init_default        {false, 0, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define krpc_schema_StreamMessage_init_default   {{{NULL}, NULL}}
#define krpc_schema_StreamResponse_init_default  {false, 0, false, krpc_schema_Response_init_default}
#define krpc_schema_Services_init_default        {{{NULL}, NULL}}
#define krpc_schema_Service_init_default         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Procedure_init_default       {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Parameter_init_default       {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define krpc_schema_Class_init_default           {{{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Enumeration_init_default     {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_EnumerationValue_init_default {{{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define krpc_schema_List_init_default            {{{NULL}, NULL}}
#define krpc_schema_Dictionary_init_default      {{{NULL}, NULL}}
#define krpc_schema_DictionaryEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Set_init_default             {{{NULL}, NULL}}
#define krpc_schema_Tuple_init_default           {{{NULL}, NULL}}
#define krpc_schema_Status_init_default          {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define krpc_schema_Request_init_zero            {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Argument_init_zero           {false, 0, {{NULL}, NULL}}
#define krpc_schema_Response_init_zero           {false, 0, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define krpc_schema_StreamMessage_init_zero      {{{NULL}, NULL}}
#define krpc_schema_StreamResponse_init_zero     {false, 0, false, krpc_schema_Response_init_zero}
#define krpc_schema_Services_init_zero           {{{NULL}, NULL}}
#define krpc_schema_Service_init_zero            {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Procedure_init_zero          {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Parameter_init_zero          {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define krpc_schema_Class_init_zero              {{{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Enumeration_init_zero        {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_EnumerationValue_init_zero   {{{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define krpc_schema_List_init_zero               {{{NULL}, NULL}}
#define krpc_schema_Dictionary_init_zero         {{{NULL}, NULL}}
#define krpc_schema_DictionaryEntry_init_zero    {{{NULL}, NULL}, {{NULL}, NULL}}
#define krpc_schema_Set_init_zero                {{{NULL}, NULL}}
#define krpc_schema_Tuple_init_zero              {{{NULL}, NULL}}
#define krpc_schema_Status_init_zero             {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define krpc_schema_Class_name_tag               1
#define krpc_schema_Class_documentation_tag      2
#define krpc_schema_Dictionary_entries_tag       1
#define krpc_schema_DictionaryEntry_key_tag      1
#define krpc_schema_DictionaryEntry_value_tag    2
#define krpc_schema_Enumeration_name_tag         1
#define krpc_schema_Enumeration_values_tag       2
#define krpc_schema_Enumeration_documentation_tag 3
#define krpc_schema_List_items_tag               1
#define krpc_schema_Request_service_tag          1
#define krpc_schema_Request_procedure_tag        2
#define krpc_schema_Request_arguments_tag        3
#define krpc_schema_Service_name_tag             1
#define krpc_schema_Service_procedures_tag       2
#define krpc_schema_Service_classes_tag          3
#define krpc_schema_Service_enumerations_tag     4
#define krpc_schema_Service_documentation_tag    5
#define krpc_schema_Services_services_tag        1
#define krpc_schema_Set_items_tag                1
#define krpc_schema_StreamMessage_responses_tag  1
#define krpc_schema_Tuple_items_tag              1
#define krpc_schema_Argument_position_tag        1
#define krpc_schema_Argument_value_tag           2
#define krpc_schema_EnumerationValue_name_tag    1
#define krpc_schema_EnumerationValue_value_tag   2
#define krpc_schema_EnumerationValue_documentation_tag 3
#define krpc_schema_Parameter_name_tag           1
#define krpc_schema_Parameter_type_tag           2
#define krpc_schema_Parameter_has_default_value_tag 3
#define krpc_schema_Parameter_default_value_tag  4
#define krpc_schema_Procedure_name_tag           1
#define krpc_schema_Procedure_parameters_tag     2
#define krpc_schema_Procedure_has_return_type_tag 3
#define krpc_schema_Procedure_return_type_tag    4
#define krpc_schema_Procedure_attributes_tag     5
#define krpc_schema_Procedure_documentation_tag  6
#define krpc_schema_Response_time_tag            1
#define krpc_schema_Response_has_error_tag       2
#define krpc_schema_Response_error_tag           3
#define krpc_schema_Response_has_return_value_tag 4
#define krpc_schema_Response_return_value_tag    5
#define krpc_schema_Status_version_tag           1
#define krpc_schema_Status_bytes_read_tag        2
#define krpc_schema_Status_bytes_written_tag     3
#define krpc_schema_Status_bytes_read_rate_tag   4
#define krpc_schema_Status_bytes_written_rate_tag 5
#define krpc_schema_Status_rpcs_executed_tag     6
#define krpc_schema_Status_rpc_rate_tag          7
#define krpc_schema_Status_one_rpc_per_update_tag 8
#define krpc_schema_Status_max_time_per_update_tag 9
#define krpc_schema_Status_adaptive_rate_control_tag 10
#define krpc_schema_Status_blocking_recv_tag     11
#define krpc_schema_Status_recv_timeout_tag      12
#define krpc_schema_Status_time_per_rpc_update_tag 13
#define krpc_schema_Status_poll_time_per_rpc_update_tag 14
#define krpc_schema_Status_exec_time_per_rpc_update_tag 15
#define krpc_schema_Status_stream_rpcs_tag       16
#define krpc_schema_Status_stream_rpcs_executed_tag 17
#define krpc_schema_Status_stream_rpc_rate_tag   18
#define krpc_schema_Status_time_per_stream_update_tag 19
#define krpc_schema_StreamResponse_id_tag        1
#define krpc_schema_StreamResponse_response_tag  2

/* Struct field encoding specification for nanopb */
extern const pb_field_t krpc_schema_Request_fields[4];
extern const pb_field_t krpc_schema_Argument_fields[3];
extern const pb_field_t krpc_schema_Response_fields[6];
extern const pb_field_t krpc_schema_StreamMessage_fields[2];
extern const pb_field_t krpc_schema_StreamResponse_fields[3];
extern const pb_field_t krpc_schema_Services_fields[2];
extern const pb_field_t krpc_schema_Service_fields[6];
extern const pb_field_t krpc_schema_Procedure_fields[7];
extern const pb_field_t krpc_schema_Parameter_fields[5];
extern const pb_field_t krpc_schema_Class_fields[3];
extern const pb_field_t krpc_schema_Enumeration_fields[4];
extern const pb_field_t krpc_schema_EnumerationValue_fields[4];
extern const pb_field_t krpc_schema_List_fields[2];
extern const pb_field_t krpc_schema_Dictionary_fields[2];
extern const pb_field_t krpc_schema_DictionaryEntry_fields[3];
extern const pb_field_t krpc_schema_Set_fields[2];
extern const pb_field_t krpc_schema_Tuple_fields[2];
extern const pb_field_t krpc_schema_Status_fields[20];

/* Maximum encoded size of messages (where known) */
/* krpc_schema_Request_size depends on runtime parameters */
/* krpc_schema_Argument_size depends on runtime parameters */
/* krpc_schema_Response_size depends on runtime parameters */
/* krpc_schema_StreamMessage_size depends on runtime parameters */
#define krpc_schema_StreamResponse_size          (12 + krpc_schema_Response_size)
/* krpc_schema_Services_size depends on runtime parameters */
/* krpc_schema_Service_size depends on runtime parameters */
/* krpc_schema_Procedure_size depends on runtime parameters */
/* krpc_schema_Parameter_size depends on runtime parameters */
/* krpc_schema_Class_size depends on runtime parameters */
/* krpc_schema_Enumeration_size depends on runtime parameters */
/* krpc_schema_EnumerationValue_size depends on runtime parameters */
/* krpc_schema_List_size depends on runtime parameters */
/* krpc_schema_Dictionary_size depends on runtime parameters */
/* krpc_schema_DictionaryEntry_size depends on runtime parameters */
/* krpc_schema_Set_size depends on runtime parameters */
/* krpc_schema_Tuple_size depends on runtime parameters */
/* krpc_schema_Status_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define KRPC_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
